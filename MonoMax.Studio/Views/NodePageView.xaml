<UserControl x:Class="MonoMax.Studio.Views.NodePageView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:mock="clr-namespace:MonoMax.Studio.ViewModels"
             xmlns:dd="urn:gong-wpf-dragdrop"
             x:Name="uc"
             mc:Ignorable="d" 
             d:DesignHeight="500" d:DesignWidth="180"
             d:DataContext="{d:DesignInstance Type={x:Type mock:NodePageViewModel}, IsDesignTimeCreatable=True}">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" MaxHeight="150" />
            <RowDefinition Height="Auto" MaxHeight="150" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                      VerticalScrollBarVisibility="Auto">
            <ItemsControl ItemsSource="{Binding AvailableTags}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Border Margin="3">
                            <Border.InputBindings>
                                <MouseBinding MouseAction="LeftClick"
                                              Command="{Binding ElementName=uc, Path=DataContext.MouseLeftDownCommand}"
                                              CommandParameter="{Binding}">
                                </MouseBinding>
                                
                                <MouseBinding MouseAction="LeftDoubleClick"
                                              Command="{Binding ElementName=uc, Path=DataContext.LeftDoubleClickCommand}"
                                              CommandParameter="Available">
                                </MouseBinding>
                            </Border.InputBindings>
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="False">
                                            <Setter Property="Background" Value="{StaticResource accent_colorbrush_1}" />
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{StaticResource hover_colorbrush_1}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>


                            <TextBlock Margin="3" Text="{Binding}"
                                   VerticalAlignment="Center" Foreground="White">
                            </TextBlock>
                        </Border>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>
        <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                      VerticalScrollBarVisibility="Auto"
                      Grid.Row="1">
            <ItemsControl ItemsSource="{Binding SelectedTags}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Border Margin="3">
                            <Border.InputBindings>
                                <MouseBinding MouseAction="LeftClick"
                                              Command="{Binding ElementName=uc, Path=DataContext.MouseLeftDownCommand}"
                                              CommandParameter="{Binding}">
                                </MouseBinding>
                                <MouseBinding MouseAction="LeftDoubleClick"
                                              Command="{Binding ElementName=uc, Path=DataContext.LeftDoubleClickCommand}"
                                              CommandParameter="Selected">
                                </MouseBinding>
                            </Border.InputBindings>
                            
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="False">
                                            <Setter Property="Background" Value="{StaticResource accent_colorbrush_2}" />
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{StaticResource hover_colorbrush_1}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <TextBlock Margin="3" Text="{Binding}"
                                   VerticalAlignment="Center" Foreground="White">
                            </TextBlock>
                        </Border>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>
        <ListBox ItemsSource="{Binding Items}" Grid.Row="2" 
                 HorizontalContentAlignment="Stretch">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid dd:DragDrop.IsDragSource="True"
                      dd:DragDrop.DragAdornerTranslation="16,50"
                      Background="Transparent">
                        <Grid.ToolTip>
                            <ToolTip Background="Transparent" BorderThickness="0">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Image Height="128" Width="128" Source="{Binding Images[128]}" Visibility="{Binding HasImageSet, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                    <ItemsControl Background="Transparent" ItemsSource="{Binding Tags}" Grid.Row="1">               
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <WrapPanel MaxWidth="200" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Border Background="{StaticResource accent_colorbrush_1}" Margin="2">
                                                    <TextBlock Text="{Binding}" 
                                                   VerticalAlignment="Center" HorizontalAlignment="Center"
                                                   Foreground="White"
                                                   Margin="3" />
                                                </Border>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </Grid>
                            </ToolTip>
                        </Grid.ToolTip>
                        <dd:DragDrop.DragAdornerTemplate>
                            <DataTemplate>
                                <Grid Background="#FFEEEEEE" Margin="3">
                                    <Grid TextElement.FontFamily="Consolas">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="1*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <StackPanel Orientation="Horizontal">
                                            <Image Height="32" Width="32" Source="{Binding Images[32], FallbackValue={StaticResource Missing_img_32}}" />
                                            <TextBlock Margin="3,0,0,0" VerticalAlignment="Center" Text="{Binding Header}" />
                                            <Image Height="16" Width="16" Margin="10,0,0,0">
                                                <Image.Style>
                                                    <Style TargetType="{x:Type Image}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding HasErrors}" Value="False">
                                                                <Setter Property="Source" Value="{StaticResource img_valid}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding HasErrors}" Value="True">
                                                                <Setter Property="Source" Value="{StaticResource img_invalid}" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                        </StackPanel>
                                        <StackPanel Grid.Row="1" Visibility="{Binding HasErrors, Converter={StaticResource BooleanToVisibilityConverter}}">
                                            <Grid Margin="3">
                                                <Grid Height="5" />
                                                <ItemsControl TextElement.Foreground="Red"
                                                  ItemsSource="{Binding Errors}">
                                                </ItemsControl>
                                            </Grid>
                                        </StackPanel>
                                    </Grid>
                                </Grid>
                            </DataTemplate>
                        </dd:DragDrop.DragAdornerTemplate>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>
                        <Image Height="32" Width="32" VerticalAlignment="Top" Source="{Binding Images[32], FallbackValue={StaticResource Missing_img_32}}" />
                        <Border Grid.Column="1" Margin="3,0,0,0">
                            <Grid>
                                <TextBlock Text="{Binding Header}" VerticalAlignment="Center" DockPanel.Dock="Top"
                                       Foreground="{StaticResource accent_colorbrush_1}"/>
                                 
                            </Grid>
                        </Border>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </Grid>
</UserControl>
