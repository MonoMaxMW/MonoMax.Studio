<Window x:Class="MonoMax.Studio.Views.ShellView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:cal="http://www.caliburnproject.org"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:dd="urn:gong-wpf-dragdrop"
        mc:Ignorable="d"
        TextElement.FontFamily="Open Sans"
        TextElement.FontSize="14"
        TextElement.Foreground="DimGray"
        UseLayoutRounding="True"
        RenderOptions.BitmapScalingMode="HighQuality"
        Title="MonoMax.Studio" Height="768" Width="1024"
        x:Name="mainWindow"
        Background="White">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <Style x:Key="TreeViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill" Color="#FF595959"/>
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke" Color="#FF262626"/>
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke" Color="#FF27C7F7"/>
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill" Color="#FFCCEEFB"/>
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="#FF1CC4F7"/>
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill" Color="#FF82DFFB"/>
        <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke" Color="#FF818181"/>

        <Style TargetType="{x:Type ToolTip}">
            <Setter Property="TextElement.FontFamily" Value="Open Sans" />
        </Style>

        <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="Transparent" Height="16" Padding="5,5,5,5" Width="16">
                            <Path x:Name="ExpandPath" Data="{StaticResource TreeArrow}" Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}" Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="RenderTransform" TargetName="ExpandPath">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}"/>
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}"/>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsChecked" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}"/>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TreeViewItemStrechStyle" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="1,0,0,0"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="19" Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}"/>
                            <Border x:Name="Bd" Grid.Column="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel/>
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid Panel.ZIndex="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <ItemsControl Grid.Column="1" ItemsSource="{Binding NotificationManager.Notifications}"
                          VerticalAlignment="Top"
                          Margin="0,20,20,0">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Border Background="{StaticResource accent_colorbrush_1}">
                            <TextBlock Foreground="White" Text="{Binding Message}" Margin="3" />
                        </Border>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>

            </ItemsControl>
        </Grid>
        <Grid>
            <DockPanel>
                <!--<Menu DockPanel.Dock="Top">
                    <Menu.Items>
                        <MenuItem Header="Generate data" Command="{Binding OpenNodedataGeneratorCommand}" />
                    </Menu.Items>
                </Menu>-->
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.4*" />
                        <ColumnDefinition Width="1" />
                        <ColumnDefinition Width="0.6*" />
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>
                        <ItemsControl ItemsSource="{Binding NodePagesViewModels}"
                                      MinWidth="150" Background="{StaticResource ThemeMainColorBrush}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <DockPanel>
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                                <cal:ActionMessage MethodName="ActivateNodePage">
                                                    <cal:Parameter Value="$dataContext" />
                                                </cal:ActionMessage>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <DockPanel.Style>
                                            <Style TargetType="DockPanel">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsActive}" Value="True">
                                                        <Setter Property="Background" Value="{StaticResource ThemeSubColorBrush}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsActive}" Value="False">
                                                        <Setter Property="Background" Value="Transparent" />
                                                    </DataTrigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="{StaticResource HoverColorBrush}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DockPanel.Style>
                                        <Border x:Name="bd" Width="5">
                                            <Border.Style>
                                                <Style>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsActive}" Value="True">
                                                            <Setter Property="Border.Background" Value="{StaticResource ActiveHighlightColorBrush}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                        </Border>
                                        <DockPanel>
                                            <TextBlock Text="{Binding Header}" HorizontalAlignment="Center" 
                                                   Foreground="{StaticResource TextSubColorBrush}" DockPanel.Dock="Bottom"
                                                   FontWeight="DemiBold"/>
                                            <Border Grid.Row="1">
                                                <Image Stretch="None" Margin="3" Source="{Binding Icon}" />
                                            </Border>
                                        </DockPanel>
                                    </DockPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <ContentControl x:Name="ActiveNodePage" Grid.Column="1" />
                    </Grid>
                    <Grid Grid.Column="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>
                        <Border Width="2" Background="DimGray" />
                        <Grid Grid.Column="1">
                            <Canvas x:Name="PositionCanvas" Panel.ZIndex="1">
                                <Grid x:Name="SuggestionPopup"
                                      Visibility="{Binding SuggestionPopupIsOpen, Converter={StaticResource BooleanToVisibilityConverter}}" Background="#FF42A5F5">
                                    <Expander Visibility="{Binding ElementName=SuggestionPopup, Path=Visibility, UpdateSourceTrigger=PropertyChanged}">
                                        <Expander.Header>
                                            <TextBlock Text="SUGGESTIONS" Foreground="White" Margin="3,3,50,3" />
                                        </Expander.Header>
                                        <ScrollViewer VerticalScrollBarVisibility="Auto"
                                                  MaxHeight="180" Background="{StaticResource ThemeMainColorBrush}">
                                            <ItemsControl ItemsSource="{Binding InsertableNodes}">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <Grid.Style>
                                                                <Style>
                                                                    <Style.Triggers>
                                                                        <Trigger Property="Grid.IsMouseOver" Value="True">
                                                                            <Setter Property="Grid.Background" Value="{StaticResource HoverColorBrush}" />
                                                                        </Trigger>
                                                                        <Trigger Property="Grid.IsMouseOver" Value="False">
                                                                            <Setter Property="Grid.Background" Value="Transparent" />
                                                                        </Trigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Grid.Style>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="Auto" />
                                                                <ColumnDefinition Width="Auto" />
                                                                <ColumnDefinition Width="1*" />
                                                            </Grid.ColumnDefinitions>

                                                            <Border Height="24" Width="24"
                                                                    Margin="5,0,0,0">
                                                                <i:Interaction.Triggers>
                                                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                                                        <cal:ActionMessage MethodName="AddSuggestNode">
                                                                            <cal:Parameter Value="$dataContext" />
                                                                        </cal:ActionMessage>
                                                                    </i:EventTrigger>
                                                                </i:Interaction.Triggers>

                                                                <Border.Style>
                                                                    <Style>
                                                                        <Style.Triggers>
                                                                            <Trigger Property="Border.IsMouseOver" Value="True">
                                                                                <Setter Property="Border.Background" Value="Red" />
                                                                            </Trigger>
                                                                            <Trigger Property="Border.IsMouseOver" Value="False">
                                                                                <Setter Property="Border.Background" Value="{StaticResource ThemeSubColorBrush}" />
                                                                            </Trigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Border.Style>

                                                                <TextBlock Text="+" 
                                                                       FontSize="14"
                                                                       Foreground="White"
                                                                       FontWeight="Bold"
                                                                       VerticalAlignment="Center"
                                                                       HorizontalAlignment="Center">
                                                                </TextBlock>
                                                            </Border>

                                                            <Image Grid.Column="1" Margin="5,0,0,0" Height="32" Width="32" Source="{Binding Images[32]}" />
                                                            <TextBlock Grid.Column="2" Margin="5,0,0,0" Text="{Binding Header}" VerticalAlignment="Center" Foreground="White" />
                                                        </Grid>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                        </ScrollViewer>
                                    </Expander>
                                </Grid>
                            </Canvas>
                            <TreeView x:Name="treeview"
                                      BorderThickness="0"
                                      ItemsSource="{Binding Root}"
                                      HorizontalContentAlignment="Stretch"
                                      Tag="{Binding}"
                                      Background="{x:Null}"
                                      TreeViewItem.Unselected="treeview_Unselected"
                                      TreeViewItem.Selected="treeview_Selected">
                                <TreeView.InputBindings>
                                    <KeyBinding Key="Delete" Command="{Binding DeleteNodeCommand}" />
                                </TreeView.InputBindings>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectedItemChanged">
                                        <cal:ActionMessage MethodName="SelectedNodeChanged">
                                            <cal:Parameter Value="$eventArgs" />
                                        </cal:ActionMessage>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>

                                <TreeView.Resources>
                                    <Style TargetType="TreeViewItem" BasedOn="{StaticResource TreeViewItemStrechStyle}">
                                        <Setter Property="Tag" Value="{Binding ElementName=treeview, Path=Tag}" />
                                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                                        <Setter Property="VerticalContentAlignment" Value="Center" />
                                        <Setter Property="ContextMenu">
                                            <Setter.Value>
                                                <ContextMenu DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}" 
                                             ItemsSource="{Binding ContextCommands}">
                                                    <ContextMenu.Resources>
                                                        <Style TargetType="{x:Type MenuItem}">
                                                            <Setter Property="Header" Value="{Binding Header}" />
                                                            <Setter Property="ItemsSource" Value="{Binding ChildCommands}" />
                                                            <Setter Property="Command" Value="{Binding Command}" />
                                                        </Style>
                                                    </ContextMenu.Resources>
                                                </ContextMenu>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="LightBlue"/>
                                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black"/>
                                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="LightBlue"/>
                                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="Black"/>
                                </TreeView.Resources>

                                <TreeView.ItemTemplate>
                                    <HierarchicalDataTemplate ItemsSource="{Binding Nodes}">
                                        <DockPanel Margin="2">
                                            <Grid dd:DragDrop.IsDropTarget="True"
                                  dd:DragDrop.DropHandler="{Binding}"
                                  dd:DragDrop.DropTargetAdornerBrush="{StaticResource accent_colorbrush_2}"
                                  Background="Transparent" Margin="3,0,0,0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="1*" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.ToolTip>
                                                    <ToolTip Background="{x:Null}" BorderThickness="0">
                                                    </ToolTip>
                                                </Grid.ToolTip>
                                                <Image Height="32" Width="32" Source="{Binding Images[32], FallbackValue={StaticResource Missing_img_32}}" />
                                                <Border Grid.Column="1">
                                                    <TextBlock Margin="3,0,0,0" Text="{Binding  Header}" VerticalAlignment="Center" />
                                                </Border>
                                            </Grid>
                                        </DockPanel>
                                    </HierarchicalDataTemplate>
                                </TreeView.ItemTemplate>

                            </TreeView>
                        </Grid>
                    </Grid>
                </Grid>
            </DockPanel>
        </Grid>
    </Grid>
</Window>
